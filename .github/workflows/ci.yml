name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install . pytest

      - name: Run pytest
        run: pytest

  route-tests:
    name: Post gSwap route checks
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install python-gswap-sdk
        run: |
          python -m pip install --upgrade pip
          python -m pip install .

      - name: Execute public route checks
        id: routes
        env:
          QUOTE_INPUT_TOKEN: "GALA|Unit|none|none"
          QUOTE_OUTPUT_TOKEN: "GUSDC|Unit|none|none"
          QUOTE_INPUT_AMOUNT: "1"
          QUOTE_OUTPUT_AMOUNT: "1"
          POOL_TOKEN_A: "GALA|Unit|none|none"
          POOL_TOKEN_B: "GUSDC|Unit|none|none"
          POOL_FEE: "500"
          ASSETS_WALLET_ADDRESS: "eth|90F79bf6EB2c4f870365E785982E1f101E93b906"
          ASSETS_PAGE: "1"
          ASSETS_LIMIT: "5"
          POSITIONS_WALLET_ADDRESS: "eth|90F79bf6EB2c4f870365E785982E1f101E93b906"
          POSITIONS_LIMIT: "5"
        run: |
          python scripts/run_public_routes.py \
            --json-output route_results.json \
            --markdown-output route_comment.md
          {
            echo "json<<EOF"
            cat route_results.json
            echo "EOF"
            echo "comment<<EOF"
            cat route_comment.md
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Comment route results on PR
        uses: actions/github-script@v7
        env:
          COMMENT_BODY: ${{ steps.routes.outputs.comment }}
        with:
          script: |
            const marker = '<!-- gswap-route-tests -->';
            const body = process.env.COMMENT_BODY;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existing = comments.find(comment => comment.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }
          
